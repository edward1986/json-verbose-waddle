name: Delete JSON Object by ID

on:
  workflow_dispatch:
    inputs:
      file:
        description: "Path to the JSON file (e.g., data/users.json)"
        required: true
      id:
        description: "ID of the object to delete"
        required: true

jobs:
  delete-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Ensure data folder exists
      run: mkdir -p data

    - name: Fetch, Delete, and Commit
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        FILE_PATH="${{ github.event.inputs.file }}"
        TARGET_ID=${{ github.event.inputs.id }}

        # Fetch file
        RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/contents/$FILE_PATH)

        if echo "$RESPONSE" | jq -e .message | grep -q "Not Found"; then
          echo "❌ File not found: $FILE_PATH"
          exit 1
        fi

        echo "$RESPONSE" | jq -r .content | base64 -d > current.json
        SHA=$(echo "$RESPONSE" | jq -r .sha)

        # Remove object by ID
        jq --argjson id "$TARGET_ID" 'del( map(select(.id == $id))[] )' current.json > updated.json

        # Check for no changes (e.g. ID not found)
        if cmp -s current.json updated.json; then
          echo "⚠️ No object with ID $TARGET_ID found. No changes made."
          exit 0
        fi

        # Encode to base64
        UPDATED_BASE64=$(base64 -w 0 updated.json)

        # Prepare request body
        echo "{
          \"message\": \"Delete object with ID $TARGET_ID from $FILE_PATH\",
          \"content\": \"$UPDATED_BASE64\",
          \"sha\": \"$SHA\"
        }" > body.json

        # Push to GitHub
        curl -X PUT \
          -H "Authorization: token $GH_TOKEN" \
          -H "Content-Type: application/json" \
          --data @body.json \
          https://api.github.com/repos/${{ github.repository }}/contents/$FILE_PATH
