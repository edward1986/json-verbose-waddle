name: Read JSON Object by ID and Save to Repo

on:
  workflow_dispatch:
    inputs:
      file:
        description: "Path to the JSON file (e.g., data/users.json)"
        required: true
      id:
        description: "ID of the object to read"
        required: true

jobs:
  read-and-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_PAT }}

    - name: Read object and save to output/<table>/<id>.json
      id: extract_json
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        FILE_PATH="${{ github.event.inputs.file }}"
        TARGET_ID=${{ github.event.inputs.id }}"
        OUTPUT_FOLDER="output"
    
        BASE_NAME=$(basename "$FILE_PATH" .json)
        OUTPUT_NAME="${BASE_NAME}/${TARGET_ID}.json"
        OUTPUT_PATH="${OUTPUT_FOLDER}/${OUTPUT_NAME}"
    
        mkdir -p "$(dirname "$OUTPUT_PATH")"
    
        RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/contents/$FILE_PATH)
    
        if echo "$RESPONSE" | jq -e .message | grep -q "Not Found"; then
          echo "❌ File not found: $FILE_PATH"
          exit 1
        fi
    
        echo "$RESPONSE" | jq -r .content | base64 -d > data.json
    
        MATCH=$(jq --argjson id "$TARGET_ID" 'map(select(.id == $id))[0]' data.json)
    
        if [ "$MATCH" = "null" ]; then
          echo "⚠️ Object with ID $TARGET_ID not found."
          exit 1
        fi
    
        echo "$MATCH" > "$OUTPUT_PATH"
        echo "output_file=$OUTPUT_PATH" >> $GITHUB_OUTPUT
