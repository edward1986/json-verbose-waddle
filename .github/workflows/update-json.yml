name: Update JSON Object by ID

on:
  workflow_dispatch:
    inputs:
      file:
        description: "Path to the JSON file (e.g., data/users.json)"
        required: true
      id:
        description: "ID of the object to update"
        required: true
      object:
        description: "JSON fields to update (as a valid JSON string)"
        required: true

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Ensure data folder exists
      run: mkdir -p data

    - name: Fetch, Update, and Commit
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        # Convert ID to number
        TARGET_ID=$(echo "${{ github.event.inputs.id }}" | jq -r 'tonumber')
        RAW_UPDATE='${{ github.event.inputs.object }}'
        echo "$RAW_UPDATE" > update.json
        
        # Fetch file and decode
        RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/contents/$FILE_PATH)
        
        if echo "$RESPONSE" | jq -e .message | grep -q "Not Found"; then
          echo "❌ File not found: $FILE_PATH"
          exit 1
        fi
        
        echo "$RESPONSE" | jq -r .content | base64 -d > current.json
        SHA=$(echo "$RESPONSE" | jq -r .sha)
        
        echo "🔍 Before update:"
        jq --argjson id "$TARGET_ID" 'map(select(.id == $id))' current.json
        
        jq --slurpfile update update.json \
           --argjson id "$TARGET_ID" \
           'map(if .id == $id then . * $update[0] else . end)' current.json > updated.json
        
        if cmp -s current.json updated.json; then
          echo "✅ No update needed. File is already up-to-date."
          exit 0
        fi
